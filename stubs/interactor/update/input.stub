<?php

declare(strict_types=1);

namespace {{ namespace }};

use Seasalt\Nicoca\Components\UseCase\InputValidator;
use App\Contexts\{{ context }}\Domain\Entity\{{ entity }};

/**
 * 更新する際の入力パラメータ
 */
final class Input
{
    /**
     * @param {{ entity }}\Id $id
     * @param {{ entity }}\Title $title
     */
    public function __construct(
        private {{ entity }}\Id $id,
        private {{ entity }}\Title $title)
    {

    }

    /**
     * @return {{ entity }}\Id
     */
    public function getId(): {{ entity }}\Id
    {
        return $this->id;
    }

    /**
     * @return {{ entity }}\Title
     */
    public function getTitle(): {{ entity }}\Title
    {
        return $this->title;
    }

    /**
     * POST値からインスタンスを作成する
     *
     * @param array<string, string> $input
     * @return self
     */
    public static function fromArray(array $input): self
    {
        $validator = new InputValidator(
            requiredFields: [
                'id' => {{ entity }}\Id::class,
                'title' => {{ entity }}\Title::class,
                /** TODO: add fields */
            ],
            optionalFields: [

            ]);
        $validator->validate($input);

        return new self(
            $validator->getValidated('id'),
            $validator->getValidated('title'),
            /** TODO: add fields */
        );
    }
}
