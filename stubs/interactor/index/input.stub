<?php

declare(strict_types=1);

namespace {{ namespace }};

use Seasalt\Nicoca\Components\UseCase\CurrentPage;
use Seasalt\Nicoca\Components\UseCase\LimitPerPage;
use Seasalt\Nicoca\Components\UseCase\SearchPhrase;
use Seasalt\Nicoca\Components\UseCase\InputValidator;

/**
 * 一覧取得の入力パラメータ
 */
final class Input
{
    /**
     * @param SearchPhrase|null $searchPhrase
     * @param LimitPerPage|null $limit
     * @param CurrentPage|null $currentPage
     */
    public function __construct(
        private SearchPhrase|null $searchPhrase,
        private LimitPerPage|null $limit,
        private CurrentPage|null $currentPage)
    {

    }

    /**
     * @return SearchPhrase|null
     */
    public function getSearchPhrase(): SearchPhrase|null
    {
        return $this->searchPhrase;
    }

    /**
     * @return LimitPerPage|null
     */
    public function getLimit(): LimitPerPage|null
    {
        return $this->limit;
    }

    /**
     * @return CurrentPage|null
     */
    public function getCurrentPage(): CurrentPage|null
    {
        return $this->currentPage;
    }

    /**
     * POST値からインスタンスを作成する
     *
     * @param array<string, string> $input
     * @return static
     */
    public static function fromArray(array $input): self
    {
        $validator = new InputValidator(
            requiredFields: [

            ],
            optionalFields: [
                'search_phrase' => SearchPhrase::class,
                'limit' => LimitPerPage::class,
                'page' => CurrentPage::class,
            ]);
        $validator->validate($input);

        return new self(
            $validator->getValidated('search_phrase'),
            $validator->getValidated('limit'),
            $validator->getValidated('page'),
        );
    }
}
